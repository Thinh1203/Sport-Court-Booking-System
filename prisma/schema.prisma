generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          
  password      String
  phoneNumber   String
  fullName      String
  role          Role            @default(USER)
  avatar        String?
  background    String?
  avatarCloudinaryId String?
  backgroundCloudinaryId String?
  isBlocked     Boolean?        @default(false)
  googleId      String?
  facebookId    String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  socialAccount SocialAccount[]
}

model SocialAccount {
  id           Int    @id @default(autoincrement())
  provider     String
  name         String
  email        String
  accessToken  String
  refreshToken String
  providerId   String
  userId       Int?
  user         User?  @relation(fields: [userId], references: [id])
}

model TheSportsCenter {
  id           Int    @id @default(autoincrement())
  name         String 
  address       String
  status        Boolean         @default(true)
  view          Int          @default(0)
  isDeleted     Boolean @default(false)
  latitude      Float
  longtitude    Float
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  theSportsCenterImages TheSportsCenterImages[]
  openingHour   OpeningHour[] 
}

model TheSportsCenterImages {
  id           Int    @id @default(autoincrement())
  imageUrl     String
  sportsCenterCloudinaryId String
  theSportsCenterId Int
  theSportsCenter TheSportsCenter @relation(fields: [theSportsCenterId], references: [id])
}

model OpeningHour {
  id           Int    @id @default(autoincrement())
  dayOfWeek    Int       
  openingTime  String
  closingTime  String
  sportsCenterId Int
  sportsCenter TheSportsCenter @relation(fields: [sportsCenterId], references: [id])
}

model Category {
  id           Int    @id @default(autoincrement())
  type    String
  description String
  imageUrl String
  categoryCloudinaryId String
  isDeleted Boolean @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}